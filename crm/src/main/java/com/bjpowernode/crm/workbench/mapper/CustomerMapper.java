package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Customer;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Jun 15 23:03:48 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Jun 15 23:03:48 CST 2022
     */
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Jun 15 23:03:48 CST 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Jun 15 23:03:48 CST 2022
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Jun 15 23:03:48 CST 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed Jun 15 23:03:48 CST 2022
     */
    int updateByPrimaryKey(Customer record);

    /**
     * 保存创建的客户信息
     */
    int insertCustomer(Customer customer);

    /**
     * 根据条件分页查询客户的列表
     */
    List<Customer> selectCustomerByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件分页查询客户的总数
     */
    int selectCountOfCustomerByCondition(Map<String, Object> map);

    /**
     * 根据Id查询客户信息
     */
    Customer selectCustomerById(String id);

    /**
     * 根据Id更新客户信息
     */
    int updateCustomerById(Customer customer);

    /**
     * 根据ids批量删除客户信息
     */
    int deleteCustomerByIds(String[] ids);

    /**
     * 根据id查询客户的明细信息
     */
    Customer selectCustomerForDetailById(String id);

    /**
     * 创建联系人时自动补全客户名称，根据customerName模糊查询客户名称
     */
    List<String> selectCustomerNameByFuzzyName(String customerName);

    /**
     * 通过客户姓名查询客户id
     */
    String selectCustomerIdByName(String customerName);

    /**
     * 通过客户姓名查询客户
     */
    Customer selectCustomerByName(String customerName);
}