package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Contacts;
import com.bjpowernode.crm.workbench.domain.FunnelVO;

import java.util.List;
import java.util.Map;

public interface ContactsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Jun 16 00:02:36 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Jun 16 00:02:36 CST 2022
     */
    int insert(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Jun 16 00:02:36 CST 2022
     */
    int insertSelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Jun 16 00:02:36 CST 2022
     */
    Contacts selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Jun 16 00:02:36 CST 2022
     */
    int updateByPrimaryKeySelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Thu Jun 16 00:02:36 CST 2022
     */
    int updateByPrimaryKey(Contacts record);

    /**
     * 保存创建的联系人
     */
    int insertContacts(Contacts contacts);

    /**
     * 根据条件分页查询联系人
     */
    List<Contacts> selectContactsByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件分页查询联系人总数
     */
    int selectCountOfContactsByCondition(Map<String, Object> map);

    /**
     * 根据id查询联系人
     */
    Contacts selectContactsById(String id);

    /**
     * 更新联系人信息
     */
    int updateContacts(Contacts contacts);

    /**
     * 根据ids批量删除联系人
     */
    int deleteContactsByIds(String[] id);

    /**
     * 根据id查询联系人明细，用于detail.jsp
     */
    Contacts selectContactsForDetailById(String id);

    /**
     * 根据CustomerId查询联系人
     */
    List<Contacts> selectContactsForDetailByCustomerId(String id);

    /**
     * 根据id删除客户明细页面的相关联系人
     */
    int deleteContactsForDetailById(String id);

    /**
     * 根据联系人名称模糊查询相关信息，用于创建联系人
     */
    List<Contacts> selectContactsByFuzzyName(String contactsName);

    /**
     * 查询客户和联系人相关信息，用于显示图标
     * @return
     */
    List<FunnelVO> selectCountOfCustomerAndContactsGroupByCustomer();
}